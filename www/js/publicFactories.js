// Generated by CoffeeScript 1.9.1
(function() {
  var app, chunk;

  app = angular.module('app');

  chunk = function(arr, size) {
    var i, newArr;
    newArr = [];
    i = 0;
    while (i < arr.length) {
      newArr.push(arr.slice(i, i + size));
      i += size;
    }
    return newArr;
  };

  app.factory('Camera', [
    '$q', function($q) {
      return {
        getPicture: function(options) {
          var q;
          q = $q.defer();
          navigator.camera.getPicture((function(result) {
            q.resolve(result);
          }), (function(err) {
            q.reject(err);
          }), options);
          return q.promise;
        }
      };
    }
  ]);

  app.factory('uploadContent', [
    "$kinvey", function($kinvey) {
      return {
        uploadFile: function(data) {
          var upload_promise;
          upload_promise = $kinvey.File.upload(data.image, {
            mimeType: "image/jpeg",
            size: data.size,
            _public: true
          });
          return upload_promise.then(function(file) {
            return {
              _type: "KinveyFile",
              _id: file._id
            };
          });
        },
        uploadModel: function(collection, data) {
          var upload_promise;
          upload_promise = $kinvey.DataStore.save(collection, data);
          return upload_promise.then(function(file) {
            return file;
          });
        },
        updateModel: function(collection, data) {
          var upload_promise;
          upload_promise = $kinvey.DataStore.update(collection, data);
          return upload_promise.then(function(file) {
            return file;
          });
        },
        deleteModel: function(collection, id) {
          var delete_promise;
          delete_promise = $kinvey.DataStore.destroy(collection, id);
          return delete_promise.then(function() {
            return 'done';
          });
        }
      };
    }
  ]);

  app.factory('Library', [
    "$kinvey", function($kinvey) {
      return {
        getShelf: function(books) {
          var add_book;
          add_book = {
            coverImageUrl: "img/add_book_icon.jpg",
            add_url: "add"
          };
          books.unshift(add_book);
          return chunk(books, 3);
        }
      };
    }
  ]);

  app.factory('Pages', [
    "$kinvey", function($kinvey) {
      return {
        getPages: function(bookId) {
          var pageQuery, promise;
          pageQuery = new $kinvey.Query();
          pageQuery.equalTo('bookId', bookId);
          promise = $kinvey.DataStore.find("Pages", pageQuery);
          return promise.then(function(pages) {
            return pages;
          });
        }
      };
    }
  ]);

}).call(this);
